{"version":3,"sources":["components/Navbar.tsx","components/AppDrawer.tsx","components/AppDrawerContainer.tsx","components/DataTableHead.tsx","components/Detail.tsx","components/TableFilter.tsx","components/DataTableRow.tsx","components/DataTableToolbar.tsx","components/DataTable.tsx","components/WorldPage.tsx","types/WorldData.ts","components/WorldChartsPage.tsx","components/StatesPage.tsx","types/CurrStateData.ts","components/StateChartsPage.tsx","types/HistStateData.ts","components/Contents.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["Navbar","darkMode","handleDarkModeChange","handleDrawerToggle","drawerWidth","classes","makeStyles","theme","createStyles","title","flexGrow","darkSwitch","marginLeft","spacing","appBar","breakpoints","up","width","menuButton","marginRight","display","useStyles","AppBar","position","className","Toolbar","IconButton","color","aria-label","edge","onClick","Typography","variant","Switch","checked","onChange","ev","target","ListItemLink","props","icon","primary","to","renderLink","useMemo","React","forwardRef","itemProps","ref","ListItem","button","component","ListItemIcon","ListItemText","AppDrawer","List","AppDrawerContainer","mobileOpen","drawer","flexShrink","drawerPaper","Hidden","smUp","implementation","Drawer","anchor","open","onClose","paper","ModalProps","keepMounted","xsDown","DataTableHead","headCells","order","orderBy","onRequestSort","TableHead","TableRow","map","headCell","TableCell","key","id","align","numeric","padding","sortDirection","TableSortLabel","active","direction","property","event","label","visuallyHidden","minWidth","maxWidth","backgroundColor","palette","background","text","border","boxShadow","shadows","top","left","transform","header","justifyContent","Detail","data","allProps","idKey","closeModal","prop","name","flexDirection","TableFilter","activeProps","setActiveProps","handleChange","concat","filter","FormControlLabel","control","Checkbox","length","Divider","includes","DataTableRow","row","setDetailsOpen","hover","tabIndex","country","toolbar","alignItems","search","borderRadius","shape","fade","common","white","searchIcon","height","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","DataTableToolbar","setSearchTerm","setFilterOpen","InputBase","placeholder","root","input","value","Button","tableRoot","maxHeight","overflow","container","table","clip","margin","descendingComparator","a","b","DataTable","rows","useState","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","detailsOpen","searchTerm","filterOpen","searchedRows","emptyRows","Math","min","Paper","TableContainer","Table","stickyHeader","aria-labelledby","cell","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","Modal","worldPage","bottom","right","tableHolder","entries","entry","toLowerCase","src","countryInfo","flag","alt","WorldPage","setEntries","useEffect","fetch","then","res","json","catch","err","console","error","formControl","selectEmpty","marginTop","chart","flex","WorldChartsPage","selectedProp","setSelectedProp","showEntries","setShowEntries","propObj","find","propName","sortedEntries","val","idx","FormControl","InputLabel","Select","MenuItem","strokeDasharray","dataKey","labelStyle","formatter","x","y","fill","statesPage","state","StatesPage","setData","StateChartsPage","selectedState","setSelectedState","stateSet","reduce","allStates","item","add","Set","Array","from","loadEntries","dateStr","date","toString","year","substr","month","day","Date","parseDates","filteredData","toLocaleDateString","type","stroke","Contents","exact","path","App","localStorage","getItem","setDarkMode","setMobileOpen","createMuiTheme","blue","secondary","green","default","ThemeProvider","basename","process","dark","setItem","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e497e5a7.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from '@material-ui/core/Switch';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\nimport MenuIcon from '@material-ui/icons/Menu';\n\ninterface NavBarProps {\n  darkMode: boolean;\n  handleDarkModeChange: Function;\n  handleDrawerToggle: any;\n  drawerWidth: number;\n}\n\nexport default function Navbar({ darkMode, handleDarkModeChange, handleDrawerToggle, drawerWidth }: NavBarProps) {\n  const useStyles = makeStyles((theme) => createStyles({\n    title: {\n      flexGrow: 1\n    },\n    darkSwitch: {\n      marginLeft: theme.spacing(2)\n    },\n    appBar: {\n      [theme.breakpoints.up('sm')]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth\n      }\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        display: 'none'\n      }\n    }\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"sticky\" className={classes.appBar}>\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          edge=\"start\"\n          onClick={handleDrawerToggle}\n          className={classes.menuButton}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          Corona Tracker\n        </Typography>\n        <Switch\n          className={classes.darkSwitch}\n          checked={darkMode}\n          onChange={(ev) => handleDarkModeChange(ev.target.checked)}\n        />\n        <Brightness3Icon />\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport PublicIcon from '@material-ui/icons/Public';\nimport TimelineIcon from '@material-ui/icons/Timeline';\n\ninterface ListItemLinkProps {\n  icon?: React.ReactElement;\n  primary: string;\n  to: string;\n}\n\nfunction ListItemLink(props: ListItemLinkProps) {\n  const { icon, primary, to } = props;\n\n  const renderLink = useMemo(\n    () => React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\n      <RouterLink to={to} ref={ref} {...itemProps} />\n    )),\n    [to]\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink}>\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n\nexport default function AppDrawer() {\n  return (\n    <div>\n      <AppBar position=\"sticky\">\n        <Toolbar />\n      </AppBar>\n      <List>\n        <ListItemLink to=\"/states\" primary=\"U.S. Data\" icon={<TableChartIcon />} />\n        <ListItemLink to=\"/statecharts\" primary=\"U.S. Charts\" icon={<TimelineIcon />} />\n        <ListItemLink to=\"/world\" primary=\"World Data\" icon={<PublicIcon />} />\n        <ListItemLink to=\"/worldcharts\" primary=\"World Charts\" icon={<BarChartIcon />} />\n      </List>\n    </div>\n  );\n}\n","import React from 'react';\nimport Hidden from '@material-ui/core/Hidden';\nimport Drawer from '@material-ui/core/Drawer';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nimport AppDrawer from './AppDrawer';\n\ninterface AppDrawerContainerProps {\n  drawerWidth: number;\n  mobileOpen: boolean;\n  handleDrawerToggle: (event: any, reason?: any) => void\n}\n\nexport default function AppDrawerContainer({ drawerWidth, mobileOpen, handleDrawerToggle }: AppDrawerContainerProps) {\n  const useStyles = makeStyles((theme: Theme) => createStyles({\n    drawer: {\n      [theme.breakpoints.up('sm')]: {\n        width: drawerWidth,\n        flexShrink: 0\n      }\n    },\n    drawerPaper: {\n      width: drawerWidth\n    }\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <nav className={classes.drawer} aria-label=\"side nav\">\n      <Hidden smUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor=\"left\"\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          onClick={handleDrawerToggle}\n          classes={{ paper: classes.drawerPaper }}\n          ModalProps={{ keepMounted: true }}\n        >\n          <AppDrawer />\n        </Drawer>\n      </Hidden>\n      <Hidden xsDown implementation=\"css\">\n        <Drawer\n          classes={{ paper: classes.drawerPaper }}\n          variant=\"permanent\"\n          open\n        >\n          <AppDrawer />\n        </Drawer>\n      </Hidden>\n    </nav>\n  );\n}\n","import React from 'react';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nimport { TableHeadCell } from '../types/TableHeadCell';\n\ninterface DataTableHeadProps {\n  headCells: TableHeadCell[];\n  classes: any;\n  order: 'asc' | 'desc';\n  orderBy: string;\n  onRequestSort: Function;\n}\n\nexport default function DataTableHead({ headCells, classes, order, orderBy, onRequestSort }: DataTableHeadProps) {\n  const createSortHandler = (property: string) => (event: any) => {\n    onRequestSort(event, property)\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding=\"default\"\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface DetailProps {\n  data: any;\n  allProps: {\n    id: string,\n    name: string\n  }[];\n  idKey: string;\n  closeModal: Function;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    minWidth: 300,\n    maxWidth: '95%',\n    backgroundColor: theme.palette.background.paper,\n    color: theme.palette.text.primary,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n}));\n\nexport default function Detail({ data, allProps, idKey, closeModal }: DetailProps) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.paper}>\n      <div className={classes.header}>\n        <h2>{data[idKey]} Details</h2>\n        <IconButton onClick={() => closeModal()}>\n          <CloseIcon />\n        </IconButton>\n      </div>\n      <div>\n        {allProps.map(prop =>\n          <div key={prop.id}>{prop.name}: {(data as any)[prop.id]}</div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { ChangeEvent } from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { FilterProp } from '../types/FilterProp';\n\ninterface TableFilterProps {\n  activeProps: string[];\n  setActiveProps: Function;\n  allProps: FilterProp[];\n  closeModal: Function;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    minWidth: 300,\n    maxWidth: '95%',\n    backgroundColor: theme.palette.background.paper,\n    color: theme.palette.text.primary,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n}));\n\nexport default function TableFilter({ activeProps, setActiveProps, allProps, closeModal }: TableFilterProps) {\n  const classes = useStyles();\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      setActiveProps(activeProps.concat([event.target.name]));\n    } else {\n      setActiveProps(activeProps.filter(prop => prop !== event.target.name));\n    }\n  };\n\n  const handleSelectAllChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      setActiveProps(allProps.map(prop => prop.id));\n    } else {\n      setActiveProps([]);\n    }\n  };\n\n  return (\n    <div className={classes.paper}>\n      <div className={classes.header}>\n        <h2>Add/Remove Columns</h2>\n        <IconButton onClick={() => closeModal()}>\n          <CloseIcon />\n        </IconButton>\n      </div>\n      <FormControlLabel\n        control={<Checkbox checked={activeProps.length === allProps.length} onChange={handleSelectAllChange} name=\"all\" />}\n        label=\"All\"\n      />\n      <Divider />\n      {allProps.map(prop => (\n        <FormControlLabel\n          key={prop.id}\n          control={<Checkbox checked={activeProps.includes(prop.id)} onChange={handleChange} name={prop.id} />}\n          label={prop.name}\n        />\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nimport { WorldData } from '../types/WorldData';\n\ninterface DataTableRowProps {\n  row: WorldData;\n  activeProps: string[];\n  setDetailsOpen: Function;\n  headCell: any;\n}\n\nexport default function DataTableRow({ row, activeProps, setDetailsOpen, headCell }: DataTableRowProps) {\n  return (\n    <TableRow\n      hover\n      tabIndex={-1}\n      key={row.country}\n      onClick={() => setDetailsOpen(row)}\n    >\n      {headCell(row)}\n      {activeProps.map(prop => (\n        <TableCell key={prop} align=\"right\">{(row as any)[prop]}</TableCell>\n      ))}\n    </TableRow>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport InputBase from '@material-ui/core/InputBase';\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport FilterIcon from '@material-ui/icons/FilterList';\n\ninterface DataTableToolbarProps {\n  setSearchTerm: Function;\n  setFilterOpen: Function;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(1)\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch'\n    }\n  }\n}));\n\nexport default function DataTableToolbar({ setSearchTerm, setFilterOpen }: DataTableToolbarProps) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.toolbar}>\n      <div className={classes.search}>\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          placeholder=\"Search...\"\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n          }}\n          onChange={(ev) => setSearchTerm(ev.target.value)}\n        />\n      </div>\n      <Button onClick={() => setFilterOpen(true)}>\n        <FilterIcon />\n      </Button>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Modal from '@material-ui/core/Modal';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { WorldData } from '../types/WorldData';\nimport DataTableHead from './DataTableHead';\nimport Detail from './Detail';\nimport TableFilter from './TableFilter';\nimport DataTableRow from './DataTableRow';\nimport { TableHeadCell } from '../types/TableHeadCell';\nimport { FilterProp } from '../types/FilterProp';\nimport DataTableToolbar from './DataTableToolbar';\n\ninterface DataTableProps {\n  rows: any[];\n  headCells: TableHeadCell[];\n  allProps: FilterProp[];\n  search: Function;\n  idKey: string;\n  headCell: any;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  tableRoot: {\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: '100%'\n  },\n  paper: {\n    overflow: 'auto',\n    maxHeight: '100%',\n    width: '100%'\n  },\n  container: {\n    maxHeight: `calc(100% - 52px)`,\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\n\nfunction descendingComparator(a: any, b: any, orderBy: string) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order: 'asc' | 'desc', orderBy: string) {\n  return order === 'desc' ?\n    (a: any, b: any) => descendingComparator(a, b, orderBy) :\n    (a: any, b: any) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array: any[], comparator: Function) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] = b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function DataTable({ rows, headCells, allProps, search, idKey, headCell }: DataTableProps) {\n  const classes = useStyles();\n  const [order, setOrder] = useState<'asc' | 'desc'>('asc');\n  const [orderBy, setOrderBy] = useState(idKey);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [detailsOpen, setDetailsOpen] = useState<WorldData | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [activeProps, setActiveProps] = useState(allProps.map(prop => prop.id));\n\n  const handleRequestSort = (event: any, property: string) => {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event: any, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: any) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const searchedRows = searchTerm.length < 1 ?\n    rows :\n    search(rows, searchTerm);\n\n  const emptyRows =\n    rowsPerPage -\n    Math.min(rowsPerPage, searchedRows.length - page * rowsPerPage);\n\n  return (\n    <>\n      <Paper className={classes.tableRoot}>\n        <DataTableToolbar setSearchTerm={setSearchTerm} setFilterOpen={setFilterOpen} />\n        <TableContainer className={classes.container}>\n          <Table\n            stickyHeader\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            aria-label=\"table\"\n          >\n            <DataTableHead\n              headCells={headCells.filter(cell => activeProps.includes(cell.id) || cell.id === idKey)}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n            <TableBody>\n              {stableSort(searchedRows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row: any, index) => (\n                  <DataTableRow key={row[idKey]} row={row} activeProps={activeProps} setDetailsOpen={setDetailsOpen} headCell={headCell} />\n                ))}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={activeProps.length + 1} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={searchedRows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <Modal open={detailsOpen !== null} onClose={() => setDetailsOpen(null)}>\n        <div>\n          <Detail data={detailsOpen} allProps={allProps} idKey={idKey} closeModal={() => setDetailsOpen(null)} />\n        </div>\n      </Modal>\n      <Modal open={filterOpen} onClose={() => setFilterOpen(false)}>\n        <div>\n          <TableFilter\n            activeProps={activeProps}\n            setActiveProps={setActiveProps}\n            allProps={allProps}\n            closeModal={() => setFilterOpen(false)}\n          />\n        </div>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\nimport DataTable from './DataTable';\nimport { WorldData, getWorldDataProps } from '../types/WorldData';\nimport { TableHeadCell } from '../types/TableHeadCell';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  worldPage: {\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0\n  },\n  tableHolder: {\n    height: '100%',\n    width: '100%',\n    position: 'relative'\n  },\n}));\n\nconst allProps = getWorldDataProps();\n\nconst headCells: TableHeadCell[] = [{ id: 'country', label: 'Country', numeric: false }]\n  .concat(allProps.map(prop => ({ id: prop.id, label: prop.name, numeric: true })));\n\nfunction search(entries: WorldData[], searchTerm: string) {\n  return entries.filter(entry => entry.country.toLowerCase().includes(searchTerm.toLowerCase()))\n}\n\nconst headCell = (row: WorldData) => (\n  <TableCell align=\"left\" style={{ display: \"flex\", alignItems: \"center\" }}>\n    <img\n      style={{ height: 20, marginRight: 10 }}\n      src={row.countryInfo.flag}\n      alt={row.country}\n    />\n    {row.country}\n  </TableCell>\n);\n\nexport default function WorldPage() {\n  const [entries, setEntries] = useState<WorldData[]>([]);\n  const classes = useStyles();\n\n  const loadEntries = () => {\n    fetch('https://corona.lmao.ninja/v2/countries?sort=cases')\n      .then(res => res.json())\n      .then(entries => setEntries(entries))\n      .catch(err => console.error(err));\n  }\n\n  useEffect(() => {\n    loadEntries();\n  }, []);\n\n  return (\n    <div className={classes.worldPage}>\n      <div className={classes.tableHolder}>\n        <DataTable\n          idKey=\"country\"\n          rows={entries}\n          headCells={headCells}\n          allProps={allProps}\n          search={search}\n          headCell={headCell}\n        />\n      </div>\n    </div>\n  );\n}\n","export interface WorldData {\n  updated: number;\n  country: string;\n  countryInfo: {\n    _id: number;\n    iso2: string;\n    iso3: string;\n    lat: number;\n    long: number;\n    flag: string;\n  };\n  cases: number;\n  todayCases: number;\n  deaths: number;\n  todayDeaths: number;\n  recovered: number;\n  active: number;\n  critical: number;\n  casesPerOneMillion: number;\n  deathsPerOneMillion: number;\n  tests: number;\n  testsPerOneMillion: number;\n}\n\nexport function getWorldDataProps(): { id: string, name: string }[] {\n  return [\n    { id: \"cases\", name: \"Cases\" },\n    { id: \"todayCases\", name: \"Cases (Today)\" },\n    { id: \"casesPerOneMillion\", name: \"Cases per Million\" },\n    { id: \"deaths\", name: \"Deaths\" },\n    { id: \"todayDeaths\", name: \"Deaths (Today)\" },\n    { id: \"deathsPerOneMillion\", name: \"Deaths per Million\" },\n    { id: \"recovered\", name: \"Recovered\" },\n    { id: \"active\", name: \"Active\" },\n    { id: \"critical\", name: \"Critical\" },\n    { id: \"tests\", name: \"Tests\" },\n    { id: \"testsPerOneMillion\", name: \"Tests per Million\" },\n  ];\n}\n","import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer\n} from 'recharts';\n\nimport { WorldData, getWorldDataProps } from '../types/WorldData';\nimport Detail from './Detail';\n\nconst allProps = getWorldDataProps();\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  paper: {\n    position: 'absolute',\n    top: theme.spacing(1),\n    left: theme.spacing(1),\n    right: theme.spacing(1),\n    bottom: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  chart: {\n    flex: '1 1 auto',\n    padding: 10\n  }\n}));\n\nexport default function WorldChartsPage() {\n  const classes  = useStyles();\n  const [detailsOpen, setDetailsOpen] = useState<WorldData | null>(null);\n  const [selectedProp, setSelectedProp] = useState(allProps[0].id);\n  const [showEntries, setShowEntries] = useState(10);\n  const [entries, setEntries] = useState<WorldData[]>([]);\n\n  const propObj = allProps.find(prop => prop.id === selectedProp);\n  const propName = propObj ? propObj.name : selectedProp;\n\n  const loadEntries = () => {\n    fetch('https://corona.lmao.ninja/v2/countries?sort=cases')\n      .then(res => res.json())\n      .then(entries => setEntries(entries))\n      .catch(err => console.error(err));\n  }\n\n  useEffect(() => {\n    loadEntries();\n  }, []);\n\n  const sortedEntries = entries\n    .slice()\n    .sort((a: any, b: any) => a[selectedProp] < b[selectedProp] ? 1 : a[selectedProp] > b[selectedProp] ? -1 : 0)\n    .filter((val, idx) => {\n      if (showEntries > 0) {\n        return idx < showEntries;\n      } else {\n        return idx >= entries.length + showEntries;\n      }\n    });\n\n  return (\n    <Paper className={classes.paper}>\n      <div>\n        <FormControl className={classes.formControl}>\n          <InputLabel>Metric</InputLabel>\n          <Select value={selectedProp} onChange={(ev: any) => setSelectedProp(ev.target.value)}>\n            {allProps.map((prop) => (\n              <MenuItem value={prop.id} key={prop.id}>\n                {prop.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel>View</InputLabel>\n          <Select value={showEntries} onChange={(ev: any) => setShowEntries(ev.target.value)}>\n            <MenuItem value={10}>Top 10</MenuItem>\n            <MenuItem value={20}>Top 25</MenuItem>\n            <MenuItem value={50}>Top 50</MenuItem>\n            <MenuItem value={-10}>Bottom 10</MenuItem>\n            <MenuItem value={-25}>Bottom 25</MenuItem>\n            <MenuItem value={-50}>Bottom 50</MenuItem>\n            <MenuItem value={1000}>All</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n\n      <div className={classes.chart}>\n        <ResponsiveContainer>\n          <BarChart\n            data={sortedEntries}\n            margin={{\n              top: 5,\n              right:20,\n              left: 20,\n              bottom: 5,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"country\" />\n            <YAxis />\n            <Tooltip labelStyle={{ color: \"black\" }} formatter={(val, x, y) => [y.value, propName]} />\n            <Bar\n              dataKey={selectedProp}\n              fill=\"#8884d8\"\n              onClick={(entry) => setDetailsOpen(entry)}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n\n      <Modal open={detailsOpen !== null} onClose={() => setDetailsOpen(null)}>\n        <div>\n          <Detail data={detailsOpen as WorldData} allProps={allProps} idKey=\"country\" closeModal={() => setDetailsOpen(null)} />\n        </div>\n      </Modal>\n    </Paper>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\nimport { CurrStateData, getCurrStateProps } from '../types/CurrStateData';\nimport DataTable from './DataTable';\nimport { TableHeadCell } from '../types/TableHeadCell';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  statesPage: {\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0\n  },\n  tableHolder: {\n    height: '100%',\n    width: '100%',\n    position: 'relative'\n  },\n}));\n\nconst allProps = getCurrStateProps();\n\nconst headCells: TableHeadCell[] = [{ id: 'state', label: 'State', numeric: false }]\n  .concat(allProps.map(prop => ({ id: prop.id, label: prop.name, numeric: true })));\n\nfunction search(entries: CurrStateData[], searchTerm: string) {\n  return entries.filter(entry => entry.state.toLowerCase().includes(searchTerm.toLowerCase()))\n}\n\nconst headCell = (row: CurrStateData) => (\n  <TableCell align=\"left\" style={{ display: \"flex\", alignItems: \"center\" }}>\n    {row.state}\n  </TableCell>\n);\n\nexport default function StatesPage() {\n  const [data, setData] = useState<CurrStateData[]>([]);\n  const classes = useStyles();\n\n  const loadEntries = () => {\n    fetch('https://covidtracking.com/api/v1/states/current.json')\n      .then(res => res.json())\n      .then(entries => setData(entries))\n      .catch(err => console.error(err));\n  }\n\n  useEffect(() => {\n    loadEntries();\n  }, []);\n\n  return (\n    <div className={classes.statesPage}>\n      <div className={classes.tableHolder}>\n        <DataTable idKey=\"state\" rows={data} headCells={headCells} allProps={allProps} search={search} headCell={headCell} />\n      </div>\n    </div>\n  );\n}\n","export interface CurrStateData {\n  state: string;\n  positive: number;\n  positiveScore: number;\n  negativeScore: number;\n  negativeRegularScore: number;\n  commercialScore: number;\n  grade: string;\n  score: number;\n  pending: number | null;\n  negative: number;\n  hospitalizedCurrently: number;\n  hospitalizedCumulative: number;\n  inIcuCurrently: number | null;\n  inIcuCumulative: number | null;\n  onVentilatorCurrently: number | null;\n  onVentilatorCumulative: number | null;\n  recovered: number;\n  lastUpdateEt: string;\n  checkTimeEt: string;\n  death: number;\n  hospitalized: number;\n  totalTestResults: number;\n  posNeg: number;\n  fips: string;\n  dateModified: string;\n  dateChecked: string;\n  notes: string;\n  hash: string;\n}\n\nexport function getCurrStateProps(): { id: string, name: string }[] {\n  return [\n    { id: \"positive\", name: \"Cases\" },\n    { id: \"negative\", name: \"Negatives\" },\n    { id: \"grade\", name: \"Grade\" },\n    { id: \"hospitalizedCurrently\", name: \"Hospitalized (Current)\" },\n    { id: \"hospitalizedCumulative\", name: \"Hospitalized (Cum.)\" },\n    { id: \"inIcuCurrently\", name: \"In ICU (Current)\" },\n    { id: \"inIcuCumulative\", name: \"In ICU (Cum.)\" },\n    { id: \"onVentilatorCurrently\", name: \"On Ventilator (Current)\" },\n    { id: \"onVentilatorCumulative\", name: \"On Ventilator (Cum.)\" },\n    { id: \"recovered\", name: \"Recovered\" },\n    { id: \"death\", name: \"Deaths\" },\n    { id: \"totalTestResults\", name: \"Total Tests\" },\n  ];\n}\n","import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer\n} from 'recharts';\n\nimport { HistStateData, getHistStateProps } from '../types/HistStateData';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  paper: {\n    position: 'absolute',\n    top: theme.spacing(1),\n    left: theme.spacing(1),\n    right: theme.spacing(1),\n    bottom: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  chart: {\n    flex: '1 1 auto',\n    padding: 10\n  }\n}));\n\nconst allProps = getHistStateProps();\n\nfunction parseDates(data: any[]) {\n  return data.map(item => {\n    const dateStr: string = item.date.toString();\n    const year = dateStr.substr(0, 4);\n    const month = dateStr.substr(4, 2);\n    const day = dateStr.substr(6, 2);\n    return { ...item, date: new Date(+year, (+month) - 1, +day) };\n  });\n}\n\nexport default function StateChartsPage() {\n  const classes = useStyles();\n  const [selectedState, setSelectedState] = useState('');\n  const [selectedProp, setSelectedProp] = useState('positive');\n  const [data, setData] = useState<HistStateData[]>([]);\n\n  const propObj = allProps.find(prop => prop.id === selectedProp);\n  const propName = propObj ? propObj.name : selectedProp;\n\n  const stateSet = data.reduce((allStates, item) => {\n    allStates.add(item.state);\n    return allStates;\n  }, new Set<string>());\n\n  const allStates = Array.from(stateSet);\n\n  const loadEntries = () => {\n    fetch('https://covidtracking.com/api/v1/states/daily.json')\n      .then(res => res.json())\n      .then(entries => parseDates(entries))\n      .then(entries => {\n        setData(entries);\n        setSelectedState(entries[0].state);\n      })\n      .catch(err => console.error(err));\n  }\n\n  useEffect(() => {\n    loadEntries();\n  }, []);\n\n  const filteredData = data\n    .slice()\n    .filter(item => item.state === selectedState)\n    .sort((a, b) => a.date < b.date ? -1 : a.date > b.date ? 1 : 0)\n    .map(item => ({ ...item, date: (item.date as Date).toLocaleDateString() }));\n\n  return (\n    <Paper className={classes.paper}>\n      <div>\n        <FormControl className={classes.formControl}>\n          <InputLabel>State</InputLabel>\n          <Select value={selectedState} onChange={(ev: any) => setSelectedState(ev.target.value)}>\n            {allStates.map((state: string) => (\n              <MenuItem value={state} key={state}>\n                {state}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel>Metric</InputLabel>\n          <Select value={selectedProp} onChange={(ev: any) => setSelectedProp(ev.target.value)}>\n            {allProps.map(prop => (\n              <MenuItem value={prop.id} key={prop.id}>\n                {prop.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n\n      <div className={classes.chart}>\n        <ResponsiveContainer>\n          <LineChart\n            data={filteredData}\n            margin={{\n              top: 5,\n              right: 20,\n              left: 20,\n              bottom: 5,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip labelStyle={{ color: \"black\" }} formatter={(val, x, y) => [y.value, propName]} />\n            <Line type=\"monotone\" dataKey={selectedProp} stroke=\"#8884d8\" />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    </Paper>\n  );\n}\n","export interface HistStateData {\n  date: Date | string;\n  state: string;\n  positive: number;\n  negative: number;\n  pending: number | null;\n  hospitalizedCurrently: number | null;\n  hospitalizedCumulative: number | null;\n  inIcuCurrently: number | null;\n  inIcuCumulative: number | null;\n  onVentilatorCurrently: number | null;\n  onVentilatorCumulative: number | null;\n  recovered: number | null;\n  hash: string;\n  dateChecked: string;\n  death: number;\n  hospitalized: number | null;\n  total: number;\n  totalTestResults: number;\n  posNeg: 81;\n  fips: string;\n  deathIncrease: 1;\n  hospitalizedIncrease: number;\n  negativeIncrease: number;\n  positiveIncrease: number;\n  totalTestResultsIncrease: number;\n}\n\nexport function getHistStateProps(): { id: string, name: string }[] {\n  return [\n    { id: 'positive', name: 'Cases' },\n    { id: 'positiveIncrease', name: 'New Cases' },\n    { id: 'negative', name: 'Negatives' },\n    { id: 'negativeIncrease', name: 'New Negatives' },\n    { id: 'hospitalizedCurrently', name: 'Hospitalized (Current)' },\n    { id: 'hospitalizedCumulative', name: 'Hospitalized (Cum.)' },\n    { id: 'hospitalizedIncrease', name: 'Hospitalized Increase' },\n    { id: 'inIcuCurrently', name: 'In ICU (Current)' },\n    { id: 'inIcuCumulative', name: 'In ICU (Cum.)' },\n    { id: 'onVentilatorCurrently', name: 'On Ventilator (Current)' },\n    { id: 'onVentilatorCumulative', name: 'On Ventilator (Cum.)' },\n    { id: 'recovered', name: 'Recovered' },\n    { id: 'death', name: 'Deaths' },\n    { id: 'totalTestResults', name: 'Total Tests' },\n    { id: 'totalTestResultsIncrease', name: 'Total Tests Increase' }\n  ];\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nimport WorldPage from './WorldPage';\nimport WorldChartsPage from './WorldChartsPage';\nimport StatesPage from './StatesPage';\nimport StateChartsPage from './StateChartsPage';\n\ninterface ContentsProps {\n  drawerWidth: number;\n}\n\nexport default function Contents({ drawerWidth }: ContentsProps) {\n  const useStyles = makeStyles((theme: Theme) => createStyles({\n    container: {\n      flex: '1 1 auto',\n      position: 'relative',\n      [theme.breakpoints.up('sm')]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth\n      }\n    }\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <Switch>\n        <Redirect exact path=\"/\" to=\"/states\" />\n        <Route path=\"/world\" component={WorldPage} />\n        <Route path=\"/worldcharts\" component={WorldChartsPage} />\n        <Route path=\"/states\" component={StatesPage} />\n        <Route path=\"/statecharts\" component={StateChartsPage} />\n      </Switch>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport { green, blue } from \"@material-ui/core/colors\";\n\nimport Navbar from './Navbar';\nimport AppDrawerContainer from './AppDrawerContainer';\nimport Contents from './Contents';\n\nconst drawerWidth = 220;\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(localStorage.getItem('darkMode') === 'true');\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const theme = createMuiTheme({\n    palette: {\n      primary: blue,\n      secondary: green,\n      type: darkMode ? 'dark' : 'light',\n    },\n  });\n\n  const useStyles = makeStyles({\n    root: {\n      background: theme.palette.background.default,\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      display: 'flex',\n      flexDirection: 'column'\n    }\n  });\n\n  const classes = useStyles();\n\n  const handleDarkModeChange = (dark: boolean) => {\n    setDarkMode(dark);\n    localStorage.setItem('darkMode', dark ? 'true' : 'false');\n  };\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div className={classes.root}>\n          <Navbar\n            darkMode={darkMode}\n            handleDarkModeChange={handleDarkModeChange}\n            handleDrawerToggle={handleDrawerToggle}\n            drawerWidth={drawerWidth}\n          />\n          <AppDrawerContainer drawerWidth={drawerWidth} mobileOpen={mobileOpen} handleDrawerToggle={handleDrawerToggle} />\n          <Contents drawerWidth={drawerWidth} />\n        </div>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}