{"version":3,"sources":["redux/reducers/app.ts","redux/reducers/currState.ts","types/CurrStateData.ts","redux/reducers/histState.ts","redux/reducers/world.ts","types/WorldData.ts","redux/reducers/index.ts","redux/actionTypes.ts","redux/store.ts","components/Navbar.tsx","components/AppDrawer.tsx","components/AppDrawerContainer.tsx","components/DataTableHead.tsx","components/Detail.tsx","components/TableFilter.tsx","components/DataTableRow.tsx","components/DataTableToolbar.tsx","redux/actions.ts","components/DataTable.tsx","components/WorldPage.tsx","components/WorldChartsPage.tsx","components/StatesPage.tsx","components/StateChartsPage.tsx","types/HistStateData.ts","components/Contents.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["initialState","darkMode","localStorage","getItem","mobileOpen","rowsPerPage","data","activeProps","id","name","map","prop","search","order","orderBy","states","selectedState","selectedProp","numBars","combineReducers","app","state","action","type","payload","currState","histState","concat","world","createStore","rootReducer","Navbar","handleDarkModeChange","handleDrawerToggle","drawerWidth","classes","makeStyles","theme","createStyles","title","flexGrow","darkSwitch","marginLeft","spacing","appBar","breakpoints","up","width","menuButton","marginRight","display","useStyles","AppBar","position","className","Toolbar","IconButton","color","aria-label","edge","onClick","Typography","variant","Switch","checked","onChange","ev","target","ListItemLink","props","icon","primary","to","renderLink","useMemo","React","forwardRef","itemProps","ref","ListItem","button","component","ListItemIcon","ListItemText","AppDrawer","List","AppDrawerContainer","drawer","flexShrink","drawerPaper","Hidden","smUp","implementation","Drawer","anchor","open","onClose","paper","ModalProps","keepMounted","xsDown","DataTableHead","headCells","onRequestSort","TableHead","TableRow","headCell","TableCell","key","align","numeric","padding","sortDirection","TableSortLabel","active","direction","property","event","label","visuallyHidden","minWidth","maxWidth","backgroundColor","palette","background","text","border","boxShadow","shadows","top","left","transform","header","justifyContent","Detail","allProps","idKey","closeModal","flexDirection","TableFilter","setActiveProps","handleChange","filter","FormControlLabel","control","Checkbox","length","Divider","includes","DataTableRow","row","setDetailsOpen","hover","tabIndex","country","toolbar","alignItems","borderRadius","shape","fade","common","white","searchIcon","height","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","DataTableToolbar","searchTerm","setSearchTerm","setFilterOpen","InputBase","placeholder","root","input","value","Button","loadWorldData","loadStates","tableRoot","maxHeight","overflow","container","table","clip","margin","descendingComparator","a","b","connect","setRowsPerPage","rows","setSearch","setOrder","setOrderBy","useState","page","setPage","detailsOpen","filterOpen","emptyRows","Math","min","Paper","TableContainer","Table","stickyHeader","aria-labelledby","cell","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","Modal","worldPage","bottom","right","tableHolder","src","countryInfo","flag","alt","setData","searchedRows","item","toLowerCase","useEffect","fetch","then","res","json","entries","catch","err","console","error","formControl","selectEmpty","marginTop","chart","flex","setSelectedProp","setNumBars","propObj","find","propName","sortedEntries","val","idx","FormControl","InputLabel","Select","MenuItem","strokeDasharray","dataKey","labelStyle","formatter","x","y","fill","entry","statesPage","items","loadHistStateData","setSelectedState","url","dateStr","date","toString","year","substr","month","day","Date","parseDates","loadData","filteredData","toLocaleDateString","stroke","Contents","exact","path","WorldPage","WorldChartsPage","StatesPage","StateChartsPage","setDarkMode","setMobileOpen","createMuiTheme","blue","secondary","green","default","ThemeProvider","basename","process","dark","setItem","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.abf9eacf.chunk.js","sourcesContent":["import { SET_MOBILE_OPEN, SET_DARK_MODE, SET_ROWS_PER_PAGE } from '../actionTypes';\n\nconst initialState = {\n  darkMode: localStorage.getItem('darkMode') === 'true',\n  mobileOpen: false,\n  rowsPerPage: 10\n};\n\nexport default function (state = initialState, action: { type: string, payload?: any }) {\n  switch (action.type) {\n    case SET_DARK_MODE:\n      return {\n        ...state,\n        darkMode: action.payload\n      };\n    case SET_MOBILE_OPEN:\n      return {\n        ...state,\n        mobileOpen: action.payload\n      };\n    case SET_ROWS_PER_PAGE:\n      return {\n        ...state,\n        rowsPerPage: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { LOAD_CURR_STATE_DATA, SET_ACTIVE_STATE_PROPS, SET_STATE_SEARCH, SET_STATE_ORDER, SET_STATE_ORDER_BY } from '../actionTypes';\nimport { getCurrStateProps } from '../../types/CurrStateData';\n\nconst initialState = {\n  data: [],\n  activeProps: getCurrStateProps().map(prop => prop.id),\n  search: '',\n  order: 'asc',\n  orderBy: 'state'\n};\n\nexport default function(state = initialState, action: { type: string, payload?: any }) {\n  switch (action.type) {\n    case LOAD_CURR_STATE_DATA:\n      return {\n        ...state,\n        data: action.payload\n      };\n    case SET_ACTIVE_STATE_PROPS:\n      return {\n        ...state,\n        activeProps: action.payload\n      };\n    case SET_STATE_SEARCH:\n      return {\n        ...state,\n        search: action.payload\n      };\n    case SET_STATE_ORDER:\n      return {\n        ...state,\n        order: action.payload\n      };\n    case SET_STATE_ORDER_BY:\n      return {\n        ...state,\n        orderBy: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","export interface CurrStateData {\n  state: string;\n  positive: number;\n  positiveScore: number;\n  negativeScore: number;\n  negativeRegularScore: number;\n  commercialScore: number;\n  grade: string;\n  score: number;\n  pending: number | null;\n  negative: number;\n  hospitalizedCurrently: number;\n  hospitalizedCumulative: number;\n  inIcuCurrently: number | null;\n  inIcuCumulative: number | null;\n  onVentilatorCurrently: number | null;\n  onVentilatorCumulative: number | null;\n  recovered: number;\n  lastUpdateEt: string;\n  checkTimeEt: string;\n  death: number;\n  hospitalized: number;\n  totalTestResults: number;\n  posNeg: number;\n  fips: string;\n  dateModified: string;\n  dateChecked: string;\n  notes: string;\n  hash: string;\n}\n\nexport function getCurrStateProps(): { id: string, name: string }[] {\n  return [\n    { id: 'positive', name: 'Cases' },\n    { id: 'negative', name: 'Negatives' },\n    { id: 'grade', name: 'Grade' },\n    { id: 'hospitalizedCurrently', name: 'Hospitalized (Current)' },\n    { id: 'hospitalizedCumulative', name: 'Hospitalized (Cum.)' },\n    { id: 'inIcuCurrently', name: 'In ICU (Current)' },\n    { id: 'inIcuCumulative', name: 'In ICU (Cum.)' },\n    { id: 'onVentilatorCurrently', name: 'On Ventilator (Current)' },\n    { id: 'onVentilatorCumulative', name: 'On Ventilator (Cum.)' },\n    { id: 'recovered', name: 'Recovered' },\n    { id: 'death', name: 'Deaths' },\n    { id: 'totalTestResults', name: 'Total Tests' },\n  ];\n}\n","import { LOAD_HIST_STATE_DATA, SET_SELECTED_HIST_STATE, SET_SELECTED_HIST_PROP, LOAD_STATES } from '../actionTypes';\n\nconst initialState = {\n  data: [],\n  states: [],\n  selectedState: 'US',\n  selectedProp: 'positive'\n};\n\nexport default function (state = initialState, action: { type: string, payload?: any }) {\n  switch (action.type) {\n    case LOAD_STATES:\n      return {\n        ...state,\n        states: [{ state: 'US', name: 'United States'}].concat(action.payload)\n      };\n    case LOAD_HIST_STATE_DATA:\n      return {\n        ...state,\n        data: action.payload\n      };\n    case SET_SELECTED_HIST_STATE:\n      return {\n        ...state,\n        selectedState: action.payload\n      };\n    case SET_SELECTED_HIST_PROP:\n      return {\n        ...state,\n        selectedProp: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { LOAD_WORLD_DATA, SET_SELECTED_WORLD_PROP, SET_NUM_BARS, SET_ACTIVE_WORLD_PROPS, SET_WORLD_SEARCH, SET_WORLD_ORDER, SET_WORLD_ORDER_BY } from '../actionTypes';\nimport { getWorldDataProps } from '../../types/WorldData';\n\nconst initialState = {\n  data: [],\n  activeProps: getWorldDataProps().map(prop => prop.id),\n  numBars: 10,\n  selectedProp: 'cases',\n  search: '',\n  order: 'asc',\n  orderBy: 'country'\n};\n\nexport default function (state = initialState, action: { type: string, payload?: any }) {\n  switch (action.type) {\n    case LOAD_WORLD_DATA:\n      return {\n        ...state,\n        data: action.payload\n      };\n    case SET_ACTIVE_WORLD_PROPS:\n      return {\n        ...state,\n        activeProps: action.payload\n      };\n    case SET_SELECTED_WORLD_PROP:\n      return {\n        ...state,\n        selectedProp: action.payload\n      };\n    case SET_NUM_BARS:\n      return {\n        ...state,\n        numBars: action.payload\n      };\n    case SET_WORLD_SEARCH:\n      return {\n        ...state,\n        search: action.payload\n      };\n    case SET_WORLD_ORDER:\n      return {\n        ...state,\n        order: action.payload\n      };\n    case SET_WORLD_ORDER_BY:\n      return {\n        ...state,\n        orderBy: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","export interface WorldData {\n  updated: number;\n  country: string;\n  countryInfo: {\n    _id: number;\n    iso2: string;\n    iso3: string;\n    lat: number;\n    long: number;\n    flag: string;\n  };\n  cases: number;\n  todayCases: number;\n  deaths: number;\n  todayDeaths: number;\n  recovered: number;\n  active: number;\n  critical: number;\n  casesPerOneMillion: number;\n  deathsPerOneMillion: number;\n  tests: number;\n  testsPerOneMillion: number;\n}\n\nexport function getWorldDataProps(): { id: string, name: string }[] {\n  return [\n    { id: \"cases\", name: \"Cases\" },\n    { id: \"todayCases\", name: \"Cases (Today)\" },\n    { id: \"casesPerOneMillion\", name: \"Cases per Million\" },\n    { id: \"deaths\", name: \"Deaths\" },\n    { id: \"todayDeaths\", name: \"Deaths (Today)\" },\n    { id: \"deathsPerOneMillion\", name: \"Deaths per Million\" },\n    { id: \"recovered\", name: \"Recovered\" },\n    { id: \"active\", name: \"Active\" },\n    { id: \"critical\", name: \"Critical\" },\n    { id: \"tests\", name: \"Tests\" },\n    { id: \"testsPerOneMillion\", name: \"Tests per Million\" },\n  ];\n}\n","import { combineReducers } from 'redux';\n\nimport app from './app';\nimport currState from './currState';\nimport histState from './histState';\nimport world from './world';\n\nexport default combineReducers({ app, currState, histState, world });","export const SET_DARK_MODE = 'SET_DARK_MODE';\nexport const SET_MOBILE_OPEN = 'SET_MOBILE_OPEN';\nexport const SET_ROWS_PER_PAGE = 'SET_ROWS_PER_PAGE';\n\nexport const LOAD_WORLD_DATA = 'LOAD_WORLD_DATA';\nexport const SET_ACTIVE_WORLD_PROPS = 'SET_ACTIVE_WORLD_PROPS';\nexport const SET_SELECTED_WORLD_PROP = 'SET_SELECTED_WORLD_PROP'\nexport const SET_NUM_BARS = 'SET_NUM_BARS';\nexport const SET_WORLD_SEARCH = 'SET_WORLD_SEARCH';\nexport const SET_WORLD_ORDER_BY = 'SET_WORLD_ORDER_BY';\nexport const SET_WORLD_ORDER = 'SET_WORLD_ORDER';\n\nexport const LOAD_STATES = 'LOAD_STATES';\nexport const LOAD_CURR_STATE_DATA = 'LOAD_CURR_STATE_DATA';\nexport const SET_ACTIVE_STATE_PROPS = 'SET_ACTIVE_STATE_PROPS';\nexport const SET_STATE_SEARCH = 'SET_STATE_SEARCH';\nexport const SET_STATE_ORDER_BY = 'SET_STATE_ORDER_BY'\nexport const SET_STATE_ORDER = 'SET_STATE_ORDER';\n\nexport const LOAD_HIST_STATE_DATA = 'LOAD_HIST_STATE_DATA';\nexport const SET_SELECTED_HIST_STATE = 'SET_SELECTED_HIST_STATE';\nexport const SET_SELECTED_HIST_PROP = 'SET_SELECTED_HIST_PROP';\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nexport default createStore(rootReducer);\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from '@material-ui/core/Switch';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\nimport MenuIcon from '@material-ui/icons/Menu';\n\ninterface NavBarProps {\n  darkMode: boolean;\n  handleDarkModeChange: Function;\n  handleDrawerToggle: any;\n  drawerWidth: number;\n}\n\nexport default function Navbar({ darkMode, handleDarkModeChange, handleDrawerToggle, drawerWidth }: NavBarProps) {\n  const useStyles = makeStyles((theme) => createStyles({\n    title: {\n      flexGrow: 1\n    },\n    darkSwitch: {\n      marginLeft: theme.spacing(2)\n    },\n    appBar: {\n      [theme.breakpoints.up('sm')]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth\n      }\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        display: 'none'\n      }\n    }\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"sticky\" className={classes.appBar}>\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          edge=\"start\"\n          onClick={handleDrawerToggle}\n          className={classes.menuButton}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          Corona Tracker\n        </Typography>\n        <Switch\n          className={classes.darkSwitch}\n          checked={darkMode}\n          onChange={(ev) => handleDarkModeChange(ev.target.checked)}\n        />\n        <Brightness3Icon />\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport PublicIcon from '@material-ui/icons/Public';\nimport TimelineIcon from '@material-ui/icons/Timeline';\n\ninterface ListItemLinkProps {\n  icon?: React.ReactElement;\n  primary: string;\n  to: string;\n}\n\nfunction ListItemLink(props: ListItemLinkProps) {\n  const { icon, primary, to } = props;\n\n  const renderLink = useMemo(\n    () => React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\n      <RouterLink to={to} ref={ref} {...itemProps} />\n    )),\n    [to]\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink}>\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n\nexport default function AppDrawer() {\n  return (\n    <div>\n      <AppBar position=\"sticky\">\n        <Toolbar />\n      </AppBar>\n      <List>\n        <ListItemLink to=\"/states\" primary=\"U.S. Data\" icon={<TableChartIcon />} />\n        <ListItemLink to=\"/statecharts\" primary=\"U.S. Charts\" icon={<TimelineIcon />} />\n        <ListItemLink to=\"/world\" primary=\"World Data\" icon={<PublicIcon />} />\n        <ListItemLink to=\"/worldcharts\" primary=\"World Charts\" icon={<BarChartIcon />} />\n      </List>\n    </div>\n  );\n}\n","import React from 'react';\nimport Hidden from '@material-ui/core/Hidden';\nimport Drawer from '@material-ui/core/Drawer';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nimport AppDrawer from './AppDrawer';\n\ninterface AppDrawerContainerProps {\n  drawerWidth: number;\n  mobileOpen: boolean;\n  handleDrawerToggle: (event: any, reason?: any) => void\n}\n\nexport default function AppDrawerContainer({ drawerWidth, mobileOpen, handleDrawerToggle }: AppDrawerContainerProps) {\n  const useStyles = makeStyles((theme: Theme) => createStyles({\n    drawer: {\n      [theme.breakpoints.up('sm')]: {\n        width: drawerWidth,\n        flexShrink: 0\n      }\n    },\n    drawerPaper: {\n      width: drawerWidth\n    }\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <nav className={classes.drawer} aria-label=\"side nav\">\n      <Hidden smUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor=\"left\"\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          onClick={handleDrawerToggle}\n          classes={{ paper: classes.drawerPaper }}\n          ModalProps={{ keepMounted: true }}\n        >\n          <AppDrawer />\n        </Drawer>\n      </Hidden>\n      <Hidden xsDown implementation=\"css\">\n        <Drawer\n          classes={{ paper: classes.drawerPaper }}\n          variant=\"permanent\"\n          open\n        >\n          <AppDrawer />\n        </Drawer>\n      </Hidden>\n    </nav>\n  );\n}\n","import React from 'react';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nimport { TableHeadCell } from '../types/TableHeadCell';\n\ninterface DataTableHeadProps {\n  headCells: TableHeadCell[];\n  classes: any;\n  order: 'asc' | 'desc';\n  orderBy: string;\n  onRequestSort: Function;\n}\n\nexport default function DataTableHead({ headCells, classes, order, orderBy, onRequestSort }: DataTableHeadProps) {\n  const createSortHandler = (property: string) => (event: any) => {\n    onRequestSort(event, property)\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding=\"default\"\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface DetailProps {\n  data: any;\n  allProps: {\n    id: string,\n    name: string\n  }[];\n  idKey: string;\n  closeModal: Function;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    minWidth: 300,\n    maxWidth: '95%',\n    backgroundColor: theme.palette.background.paper,\n    color: theme.palette.text.primary,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n}));\n\nexport default function Detail({ data, allProps, idKey, closeModal }: DetailProps) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.paper}>\n      <div className={classes.header}>\n        <h2>{data[idKey]} Details</h2>\n        <IconButton onClick={() => closeModal()}>\n          <CloseIcon />\n        </IconButton>\n      </div>\n      <div>\n        {allProps.map(prop =>\n          <div key={prop.id}>{prop.name}: {(data as any)[prop.id]}</div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { ChangeEvent } from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { FilterProp } from '../types/FilterProp';\n\ninterface TableFilterProps {\n  activeProps: string[];\n  setActiveProps: Function;\n  allProps: FilterProp[];\n  closeModal: Function;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    minWidth: 300,\n    maxWidth: '95%',\n    backgroundColor: theme.palette.background.paper,\n    color: theme.palette.text.primary,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  }\n}));\n\nexport default function TableFilter({ activeProps, setActiveProps, allProps, closeModal }: TableFilterProps) {\n  const classes = useStyles();\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      setActiveProps(activeProps.concat([event.target.name]));\n    } else {\n      setActiveProps(activeProps.filter(prop => prop !== event.target.name));\n    }\n  };\n\n  const handleSelectAllChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      setActiveProps(allProps.map(prop => prop.id));\n    } else {\n      setActiveProps([]);\n    }\n  };\n\n  return (\n    <div className={classes.paper}>\n      <div className={classes.header}>\n        <h2>Add/Remove Columns</h2>\n        <IconButton onClick={() => closeModal()}>\n          <CloseIcon />\n        </IconButton>\n      </div>\n      <FormControlLabel\n        control={<Checkbox checked={activeProps.length === allProps.length} onChange={handleSelectAllChange} name=\"all\" />}\n        label=\"All\"\n      />\n      <Divider />\n      {allProps.map(prop => (\n        <FormControlLabel\n          key={prop.id}\n          control={<Checkbox checked={activeProps.includes(prop.id)} onChange={handleChange} name={prop.id} />}\n          label={prop.name}\n        />\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nimport { WorldData } from '../types/WorldData';\n\ninterface DataTableRowProps {\n  row: WorldData;\n  activeProps: string[];\n  setDetailsOpen: Function;\n  headCell: any;\n}\n\nexport default function DataTableRow({ row, activeProps, setDetailsOpen, headCell }: DataTableRowProps) {\n  return (\n    <TableRow\n      hover\n      tabIndex={-1}\n      key={row.country}\n      onClick={() => setDetailsOpen(row)}\n    >\n      {headCell(row)}\n      {activeProps.map(prop => (\n        <TableCell key={prop} align=\"right\">{(row as any)[prop]}</TableCell>\n      ))}\n    </TableRow>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport InputBase from '@material-ui/core/InputBase';\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport FilterIcon from '@material-ui/icons/FilterList';\n\ninterface DataTableToolbarProps {\n  searchTerm: string;\n  setSearchTerm: Function;\n  setFilterOpen: Function;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(1)\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch'\n    }\n  }\n}));\n\nexport default function DataTableToolbar({ searchTerm, setSearchTerm, setFilterOpen }: DataTableToolbarProps) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.toolbar}>\n      <div className={classes.search}>\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          placeholder=\"Search...\"\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n          }}\n          value={searchTerm}\n          onChange={(ev) => setSearchTerm(ev.target.value)}\n        />\n      </div>\n      <Button onClick={() => setFilterOpen(true)}>\n        <FilterIcon />\n      </Button>\n    </div>\n  );\n}\n","import * as actionTypes from './actionTypes';\nimport { WorldData } from '../types/WorldData';\nimport { CurrStateData } from '../types/CurrStateData';\nimport { HistStateData } from '../types/HistStateData';\nimport { StateInfo } from '../types/StateInfo';\n\n// App\n\nexport const setDarkMode = (payload: boolean) => ({\n  type: actionTypes.SET_DARK_MODE,\n  payload\n});\n\nexport const setMobileOpen = (payload: boolean) => ({\n  type: actionTypes.SET_MOBILE_OPEN,\n  payload\n});\n\nexport const setRowsPerPage = (payload: number) => ({\n  type: actionTypes.SET_ROWS_PER_PAGE,\n  payload\n});\n\n// World\n\nexport const loadWorldData = (payload: WorldData[]) => ({\n  type: actionTypes.LOAD_WORLD_DATA,\n  payload\n});\n\nexport const setActiveWorldProps = (payload: string[]) => ({\n  type: actionTypes.SET_ACTIVE_WORLD_PROPS,\n  payload\n});\n\nexport const setSelectedWorldProp = (payload: string) => ({\n  type: actionTypes.SET_SELECTED_WORLD_PROP,\n  payload\n});\n\nexport const setNumBars = (payload: number) => ({\n  type: actionTypes.SET_NUM_BARS,\n  payload\n});\n\nexport const setWorldSearch = (payload: string) => ({\n  type: actionTypes.SET_WORLD_SEARCH,\n  payload\n});\n\nexport const setWorldOrderBy  = (payload: string) => ({\n  type: actionTypes.SET_WORLD_ORDER_BY,\n  payload\n});\n\nexport const setWorldOrder = (payload: 'asc' | 'desc') => ({\n  type: actionTypes.SET_WORLD_ORDER,\n  payload\n});\n\n// Curr State\n\nexport const loadCurrStateData = (payload: CurrStateData[]) => ({\n  type: actionTypes.LOAD_CURR_STATE_DATA,\n  payload\n});\n\nexport const setActiveStateProps = (payload: string[]) => ({\n  type: actionTypes.SET_ACTIVE_STATE_PROPS,\n  payload\n});\n\nexport const setStateSearch = (payload: string) => ({\n  type: actionTypes.SET_STATE_SEARCH,\n  payload\n});\n\nexport const setStateOrderBy = (payload: string) => ({\n  type: actionTypes.SET_STATE_ORDER_BY,\n  payload\n});\n\nexport const setStateOrder = (payload: 'asc' | 'desc') => ({\n  type: actionTypes.SET_STATE_ORDER,\n  payload\n});\n\n// Hist State\n\nexport const loadStates = (payload: StateInfo[]) => ({\n  type: actionTypes.LOAD_STATES,\n  payload\n});\n\nexport const loadHistStateData = (payload: HistStateData[]) => ({\n  type: actionTypes.LOAD_HIST_STATE_DATA,\n  payload\n});\n\nexport const setSelectedHistState = (payload: string) => ({\n  type: actionTypes.SET_SELECTED_HIST_STATE,\n  payload\n});\n\nexport const setSelectedHistProp = (payload: string) => ({\n  type: actionTypes.SET_SELECTED_HIST_PROP,\n  payload\n});\n","import React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Modal from '@material-ui/core/Modal';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\n\nimport { WorldData } from '../types/WorldData';\nimport DataTableHead from './DataTableHead';\nimport Detail from './Detail';\nimport TableFilter from './TableFilter';\nimport DataTableRow from './DataTableRow';\nimport { TableHeadCell } from '../types/TableHeadCell';\nimport { FilterProp } from '../types/FilterProp';\nimport DataTableToolbar from './DataTableToolbar';\nimport { setRowsPerPage } from '../redux/actions';\n\ninterface DataTableProps {\n  rows: any[];\n  headCells: TableHeadCell[];\n  activeProps: string[];\n  setActiveProps: Function;\n  allProps: FilterProp[];\n  search: string;\n  setSearch: Function;\n  idKey: string;\n  headCell: any;\n  rowsPerPage: number;\n  setRowsPerPage: Function;\n  order: 'asc' | 'desc';\n  setOrder: Function;\n  orderBy: string;\n  setOrderBy: Function;\n}\n\nconst useStyles = makeStyles({\n  tableRoot: {\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: '100%'\n  },\n  paper: {\n    overflow: 'auto',\n    maxHeight: '100%',\n    width: '100%'\n  },\n  container: {\n    maxHeight: `calc(100% - 52px)`,\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n});\n\nfunction descendingComparator(a: any, b: any, orderBy: string) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order: 'asc' | 'desc', orderBy: string) {\n  return order === 'desc' ?\n    (a: any, b: any) => descendingComparator(a, b, orderBy) :\n    (a: any, b: any) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array: any[], comparator: Function) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] = b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction DataTable({\n  rows,\n  headCells,\n  activeProps,\n  setActiveProps,\n  allProps,\n  search,\n  setSearch,\n  idKey,\n  headCell,\n  rowsPerPage,\n  setRowsPerPage,\n  order,\n  setOrder,\n  orderBy,\n  setOrderBy\n}: DataTableProps) {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [detailsOpen, setDetailsOpen] = useState<WorldData | null>(null);\n  const [filterOpen, setFilterOpen] = useState(false);\n\n  const handleRequestSort = (event: any, property: string) => {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event: any, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: any) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows =\n    rowsPerPage -\n    Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <>\n      <Paper className={classes.tableRoot}>\n        <DataTableToolbar searchTerm={search} setSearchTerm={setSearch} setFilterOpen={setFilterOpen} />\n        <TableContainer className={classes.container}>\n          <Table\n            stickyHeader\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            aria-label=\"table\"\n          >\n            <DataTableHead\n              headCells={headCells.filter(cell => activeProps.includes(cell.id) || cell.id === idKey)}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row: any, index) => (\n                  <DataTableRow key={row[idKey]} row={row} activeProps={activeProps} setDetailsOpen={setDetailsOpen} headCell={headCell} />\n                ))}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={activeProps.length + 1} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <Modal open={detailsOpen !== null} onClose={() => setDetailsOpen(null)}>\n        <div>\n          <Detail data={detailsOpen} allProps={allProps} idKey={idKey} closeModal={() => setDetailsOpen(null)} />\n        </div>\n      </Modal>\n      <Modal open={filterOpen} onClose={() => setFilterOpen(false)}>\n        <div>\n          <TableFilter\n            activeProps={activeProps}\n            setActiveProps={setActiveProps}\n            allProps={allProps}\n            closeModal={() => setFilterOpen(false)}\n          />\n        </div>\n      </Modal>\n    </>\n  );\n}\n\nconst mapStateToProps = (state: any) => ({\n  rowsPerPage: state.app.rowsPerPage\n});\n\nexport default connect(mapStateToProps, {\n  setRowsPerPage\n})(DataTable);\n","import React, { useEffect } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\n\nimport DataTable from './DataTable';\nimport { WorldData, getWorldDataProps } from '../types/WorldData';\nimport { TableHeadCell } from '../types/TableHeadCell';\nimport { loadWorldData, setActiveWorldProps, setWorldSearch, setWorldOrder, setWorldOrderBy } from '../redux/actions';\n\ninterface WorldPageProps {\n  data: WorldData[];\n  setData: Function;\n  activeProps: string[];\n  setActiveProps: Function;\n  search: string;\n  setSearch: Function;\n  order: 'asc' | 'desc';\n  setOrder: Function;\n  orderBy: string;\n  setOrderBy: Function;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  worldPage: {\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0\n  },\n  tableHolder: {\n    height: '100%',\n    width: '100%',\n    position: 'relative'\n  },\n}));\n\nconst allProps = getWorldDataProps();\n\nconst headCells: TableHeadCell[] = [{ id: 'country', label: 'Country', numeric: false }]\n  .concat(allProps.map(prop => ({ id: prop.id, label: prop.name, numeric: true })));\n\nconst headCell = (row: WorldData) => (\n  <TableCell align=\"left\" style={{ display: \"flex\", alignItems: \"center\" }}>\n    <img\n      style={{ height: 20, marginRight: 10 }}\n      src={row.countryInfo.flag}\n      alt={row.country}\n    />\n    {row.country}\n  </TableCell>\n);\n\nfunction WorldPage({\n  data,\n  setData,\n  activeProps,\n  setActiveProps,\n  search,\n  setSearch,\n  order,\n  setOrder,\n  orderBy,\n  setOrderBy\n}: WorldPageProps) {\n  const classes = useStyles();\n  const searchedRows = data.filter(item => item.country.toLowerCase().includes(search.toLowerCase()));\n\n  useEffect(() => {\n    function loadData() {\n      fetch('https://corona.lmao.ninja/v2/countries?sort=cases')\n        .then(res => res.json())\n        .then(entries => setData(entries))\n        .catch(err => console.error(err));\n    }\n\n    loadData();\n  }, [setData]);\n\n  return (\n    <div className={classes.worldPage}>\n      <div className={classes.tableHolder}>\n        <DataTable\n          idKey=\"country\"\n          rows={searchedRows}\n          headCells={headCells}\n          activeProps={activeProps}\n          setActiveProps={setActiveProps}\n          allProps={allProps}\n          search={search}\n          setSearch={setSearch}\n          headCell={headCell}\n          order={order}\n          setOrder={setOrder}\n          orderBy={orderBy}\n          setOrderBy={setOrderBy}\n        />\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: any) => ({\n  data: state.world.data,\n  activeProps: state.world.activeProps,\n  search: state.world.search,\n  order: state.world.order,\n  orderBy: state.world.orderBy\n});\n\nexport default connect(mapStateToProps, {\n  setData: loadWorldData,\n  setActiveProps: setActiveWorldProps,\n  setSearch: setWorldSearch,\n  setOrder: setWorldOrder,\n  setOrderBy: setWorldOrderBy\n})(WorldPage);\n","import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer\n} from 'recharts';\nimport { connect } from 'react-redux';\n\nimport { WorldData, getWorldDataProps } from '../types/WorldData';\nimport { loadWorldData, setNumBars, setSelectedWorldProp } from '../redux/actions';\nimport Detail from './Detail';\n\ninterface WorldChartsPageProps {\n  data: WorldData[];\n  loadWorldData: Function;\n  selectedProp: string;\n  setSelectedProp: Function;\n  numBars: number;\n  setNumBars: Function;\n}\n\nconst allProps = getWorldDataProps();\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  paper: {\n    position: 'absolute',\n    top: theme.spacing(1),\n    left: theme.spacing(1),\n    right: theme.spacing(1),\n    bottom: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  chart: {\n    flex: '1 1 auto',\n    padding: 10\n  }\n}));\n\nfunction WorldChartsPage({\n  data,\n  loadWorldData,\n  selectedProp,\n  setSelectedProp,\n  numBars,\n  setNumBars\n}: WorldChartsPageProps) {\n  const classes  = useStyles();\n  const [detailsOpen, setDetailsOpen] = useState<WorldData | null>(null);\n\n  const propObj = allProps.find(prop => prop.id === selectedProp);\n  const propName = propObj ? propObj.name : selectedProp;\n\n  useEffect(() => {\n    function loadData() {\n      fetch('https://corona.lmao.ninja/v2/countries?sort=cases')\n        .then(res => res.json())\n        .then(entries => loadWorldData(entries))\n        .catch(err => console.error(err));\n    }\n\n    loadData();\n  }, [loadWorldData]);\n\n  const sortedEntries = data\n    .slice()\n    .sort((a: any, b: any) => a[selectedProp] < b[selectedProp] ? 1 : a[selectedProp] > b[selectedProp] ? -1 : 0)\n    .filter((val, idx) => {\n      if (numBars > 0) {\n        return idx < numBars;\n      } else {\n        return idx >= data.length + numBars;\n      }\n    });\n\n  return (\n    <Paper className={classes.paper}>\n      <div>\n        <FormControl className={classes.formControl}>\n          <InputLabel>Metric</InputLabel>\n          <Select value={selectedProp} onChange={(ev: any) => setSelectedProp(ev.target.value)}>\n            {allProps.map((prop) => (\n              <MenuItem value={prop.id} key={prop.id}>\n                {prop.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel>View</InputLabel>\n          <Select value={numBars} onChange={(ev: any) => setNumBars(ev.target.value)}>\n            <MenuItem value={10}>Top 10</MenuItem>\n            <MenuItem value={20}>Top 25</MenuItem>\n            <MenuItem value={50}>Top 50</MenuItem>\n            <MenuItem value={-10}>Bottom 10</MenuItem>\n            <MenuItem value={-25}>Bottom 25</MenuItem>\n            <MenuItem value={-50}>Bottom 50</MenuItem>\n            <MenuItem value={1000}>All</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n\n      <div className={classes.chart}>\n        <ResponsiveContainer>\n          <BarChart\n            data={sortedEntries}\n            margin={{\n              top: 5,\n              right:20,\n              left: 20,\n              bottom: 5,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"country\" />\n            <YAxis />\n            <Tooltip labelStyle={{ color: \"black\" }} formatter={(val, x, y) => [y.value, propName]} />\n            <Bar\n              dataKey={selectedProp}\n              fill=\"#8884d8\"\n              onClick={(entry) => setDetailsOpen(entry)}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n\n      <Modal open={detailsOpen !== null} onClose={() => setDetailsOpen(null)}>\n        <div>\n          <Detail data={detailsOpen as WorldData} allProps={allProps} idKey=\"country\" closeModal={() => setDetailsOpen(null)} />\n        </div>\n      </Modal>\n    </Paper>\n  );\n}\n\nconst mapStateToProps = (state: any) => ({\n  data: state.world.data,\n  selectedProp: state.world.selectedProp,\n  numBars: state.world.numBars\n});\n\nexport default connect(mapStateToProps, {\n  loadWorldData,\n  setSelectedProp: setSelectedWorldProp,\n  setNumBars\n})(WorldChartsPage);\n","import React, { useEffect } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\n\nimport { CurrStateData, getCurrStateProps } from '../types/CurrStateData';\nimport DataTable from './DataTable';\nimport { TableHeadCell } from '../types/TableHeadCell';\nimport { loadCurrStateData, setActiveStateProps, setStateSearch, setStateOrder, setStateOrderBy, loadStates } from '../redux/actions';\nimport { StateInfo } from '../types/StateInfo';\n\ninterface StatesPageProps {\n  states: StateInfo[];\n  loadStates: Function;\n  data: CurrStateData[];\n  setData: Function;\n  activeProps: string[];\n  setActiveProps: Function;\n  search: string;\n  setSearch: Function;\n  order: 'asc' | 'desc';\n  setOrder: Function;\n  orderBy: string;\n  setOrderBy: Function;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  statesPage: {\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0\n  },\n  tableHolder: {\n    height: '100%',\n    width: '100%',\n    position: 'relative'\n  },\n}));\n\nconst allProps = getCurrStateProps();\n\nconst headCells: TableHeadCell[] = [{ id: 'state', label: 'State', numeric: false }]\n  .concat(allProps.map(prop => ({ id: prop.id, label: prop.name, numeric: true })));\n\nfunction StatesPage({\n  states,\n  loadStates,\n  data,\n  setData,\n  activeProps,\n  setActiveProps,\n  search,\n  setSearch,\n  order,\n  setOrder,\n  orderBy,\n  setOrderBy\n}: StatesPageProps) {\n  const classes = useStyles();\n  const searchedRows = data.filter(item => item.state.toLowerCase().includes(search.toLowerCase()));\n\n  const headCell = (row: CurrStateData) => (\n    <TableCell align=\"left\" style={{ display: \"flex\", alignItems: \"center\" }}>\n      {states.find(item => item.state === row.state)?.name}\n    </TableCell>\n  );\n\n  useEffect(() => {\n    function loadData() {\n      fetch(`https://covidtracking.com/api/v1/states/info.json`)\n        .then(res => res.json())\n        .then(items => loadStates(items.map((item: any) => ({ state: item.state, name: item.name }))))\n        .catch(err => console.error(err));\n    }\n\n    if (states.length === 0) {\n      loadData();\n    }\n  }, [states, loadStates]);\n\n  useEffect(() => {\n    function loadEntries() {\n      fetch('https://covidtracking.com/api/v1/states/current.json')\n        .then(res => res.json())\n        .then(entries => setData(entries))\n        .catch(err => console.error(err));\n    }\n\n    loadEntries();\n  }, [setData]);\n\n  return (\n    <div className={classes.statesPage}>\n      <div className={classes.tableHolder}>\n        <DataTable\n          idKey=\"state\"\n          rows={searchedRows}\n          headCells={headCells}\n          activeProps={activeProps}\n          setActiveProps={setActiveProps}\n          allProps={allProps}\n          search={search}\n          setSearch={setSearch}\n          headCell={headCell}\n          order={order}\n          setOrder={setOrder}\n          orderBy={orderBy}\n          setOrderBy={setOrderBy}\n        />\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: any) => ({\n  states: state.histState.states,\n  data: state.currState.data,\n  activeProps: state.currState.activeProps,\n  search: state.currState.search,\n  order: state.currState.order,\n  orderBy: state.currState.orderBy\n});\n\nexport default connect(mapStateToProps, {\n  loadStates: loadStates,\n  setData: loadCurrStateData,\n  setActiveProps: setActiveStateProps,\n  setSearch: setStateSearch,\n  setOrder: setStateOrder,\n  setOrderBy: setStateOrderBy\n})(StatesPage);\n","import React, { useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer\n} from 'recharts';\nimport { connect } from 'react-redux';\n\nimport { HistStateData, getHistStateProps } from '../types/HistStateData';\nimport { loadStates, loadHistStateData, setSelectedHistState, setSelectedHistProp } from '../redux/actions';\nimport { StateInfo } from '../types/StateInfo';\n\ninterface StateChartsPageProps {\n  states: StateInfo[];\n  loadStates: Function;\n  data: HistStateData[];\n  loadHistStateData: Function;\n  selectedState: string;\n  setSelectedState: Function;\n  selectedProp: string;\n  setSelectedProp: Function;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  paper: {\n    position: 'absolute',\n    top: theme.spacing(1),\n    left: theme.spacing(1),\n    right: theme.spacing(1),\n    bottom: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  chart: {\n    flex: '1 1 auto',\n    padding: 10,\n    position: 'relative',\n    height: '100%',\n    width: '100%'\n  }\n}));\n\nconst allProps = getHistStateProps();\n\nfunction parseDates(data: any[]) {\n  return data.map(item => {\n    const dateStr: string = item.date.toString();\n    const year = dateStr.substr(0, 4);\n    const month = dateStr.substr(4, 2);\n    const day = dateStr.substr(6, 2);\n    return { ...item, date: new Date(+year, (+month) - 1, +day) };\n  });\n}\n\nfunction StateChartsPage({\n  states,\n  loadStates,\n  data,\n  loadHistStateData,\n  selectedState,\n  setSelectedState,\n  selectedProp,\n  setSelectedProp\n}: StateChartsPageProps) {\n  const classes = useStyles();\n\n  const propObj = allProps.find(prop => prop.id === selectedProp);\n  const propName = propObj ? propObj.name : selectedProp;\n\n  useEffect(() => {\n    function loadData() {\n      fetch(`https://covidtracking.com/api/v1/states/info.json`)\n        .then(res => res.json())\n        .then(items => loadStates(items.map((item: any) => ({ state: item.state, name: item.name }))))\n        .catch(err => console.error(err));\n    }\n\n    if (states.length === 0) {\n      loadData();\n    }\n  }, [states, loadStates]);\n\n  useEffect(() => {\n    function loadData() {\n      let url = 'https://covidtracking.com/api/v1/';\n      url += selectedState === 'US' ? 'us/daily.json' : `states/${selectedState}/daily.json`;\n      fetch(url)\n        .then(res => res.json())\n        .then(entries => parseDates(entries))\n        .then(entries => loadHistStateData(entries))\n        .catch(err => console.error(err));\n    }\n\n    loadData();\n  }, [selectedState, loadHistStateData]);\n\n  const filteredData = data\n    .slice()\n    .sort((a, b) => a.date < b.date ? -1 : a.date > b.date ? 1 : 0)\n    .map(item => ({ ...item, date: (item.date as Date).toLocaleDateString() }));\n\n  return (\n    <Paper className={classes.paper}>\n      <div>\n        <FormControl className={classes.formControl}>\n          <InputLabel>State</InputLabel>\n          <Select value={selectedState} onChange={(ev: any) => setSelectedState(ev.target.value)}>\n            {states.map((item: StateInfo) => (\n              <MenuItem value={item.state} key={item.state}>\n                {item.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel>Metric</InputLabel>\n          <Select value={selectedProp} onChange={(ev: any) => setSelectedProp(ev.target.value)}>\n            {allProps.map(prop => (\n              <MenuItem value={prop.id} key={prop.id}>\n                {prop.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n\n      <div className={classes.chart}>\n        <ResponsiveContainer>\n          <LineChart\n            data={filteredData}\n            margin={{\n              top: 5,\n              right: 20,\n              left: 20,\n              bottom: 5,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip labelStyle={{ color: \"black\" }} formatter={(val, x, y) => [y.value, propName]} />\n            <Line type=\"monotone\" dataKey={selectedProp} stroke=\"#8884d8\" />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    </Paper>\n  );\n}\n\nconst mapStateToProps = (state: any) => ({\n  states: state.histState.states,\n  data: state.histState.data,\n  selectedState: state.histState.selectedState,\n  selectedProp: state.histState.selectedProp\n});\n\nexport default connect(mapStateToProps, {\n  loadStates,\n  loadHistStateData,\n  setSelectedState: setSelectedHistState,\n  setSelectedProp: setSelectedHistProp\n})(StateChartsPage);\n","export interface HistStateData {\n  date: Date | string;\n  state: string;\n  positive: number;\n  negative: number;\n  pending: number | null;\n  hospitalizedCurrently: number | null;\n  hospitalizedCumulative: number | null;\n  inIcuCurrently: number | null;\n  inIcuCumulative: number | null;\n  onVentilatorCurrently: number | null;\n  onVentilatorCumulative: number | null;\n  recovered: number | null;\n  hash: string;\n  dateChecked: string;\n  death: number;\n  hospitalized: number | null;\n  total: number;\n  totalTestResults: number;\n  posNeg: 81;\n  fips: string;\n  deathIncrease: 1;\n  hospitalizedIncrease: number;\n  negativeIncrease: number;\n  positiveIncrease: number;\n  totalTestResultsIncrease: number;\n}\n\nexport function getHistStateProps(): { id: string, name: string }[] {\n  return [\n    { id: 'positive', name: 'Cases' },\n    { id: 'positiveIncrease', name: 'New Cases' },\n    { id: 'negative', name: 'Negatives' },\n    { id: 'negativeIncrease', name: 'New Negatives' },\n    { id: 'hospitalizedCurrently', name: 'Hospitalized (Current)' },\n    { id: 'hospitalizedCumulative', name: 'Hospitalized (Cum.)' },\n    { id: 'hospitalizedIncrease', name: 'Hospitalized Increase' },\n    { id: 'inIcuCurrently', name: 'In ICU (Current)' },\n    { id: 'inIcuCumulative', name: 'In ICU (Cum.)' },\n    { id: 'onVentilatorCurrently', name: 'On Ventilator (Current)' },\n    { id: 'onVentilatorCumulative', name: 'On Ventilator (Cum.)' },\n    { id: 'recovered', name: 'Recovered' },\n    { id: 'death', name: 'Deaths' },\n    { id: 'deathIncrease', name: 'New Deaths' },\n    { id: 'totalTestResults', name: 'Total Tests' },\n    { id: 'totalTestResultsIncrease', name: 'Total Tests Increase' }\n  ];\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nimport WorldPage from './WorldPage';\nimport WorldChartsPage from './WorldChartsPage';\nimport StatesPage from './StatesPage';\nimport StateChartsPage from './StateChartsPage';\n\ninterface ContentsProps {\n  drawerWidth: number;\n}\n\nexport default function Contents({ drawerWidth }: ContentsProps) {\n  const useStyles = makeStyles((theme: Theme) => createStyles({\n    container: {\n      flex: '1 1 auto',\n      position: 'relative',\n      [theme.breakpoints.up('sm')]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth\n      }\n    }\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <Switch>\n        <Redirect exact path=\"/\" to=\"/states\" />\n        <Route path=\"/world\" component={WorldPage} />\n        <Route path=\"/worldcharts\" component={WorldChartsPage} />\n        <Route path=\"/states\" component={StatesPage} />\n        <Route path=\"/statecharts\" component={StateChartsPage} />\n      </Switch>\n    </div>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport { green, blue } from \"@material-ui/core/colors\";\nimport { connect } from 'react-redux';\n\nimport Navbar from './Navbar';\nimport AppDrawerContainer from './AppDrawerContainer';\nimport Contents from './Contents';\nimport { setDarkMode, setMobileOpen } from '../redux/actions';\n\ninterface AppProps {\n  darkMode: boolean;\n  setDarkMode: Function;\n  mobileOpen: boolean;\n  setMobileOpen: Function;\n}\n\nconst drawerWidth = 220;\n\nfunction App({ darkMode, setDarkMode, mobileOpen, setMobileOpen }: AppProps) {\n  const theme = createMuiTheme({\n    palette: {\n      primary: blue,\n      secondary: green,\n      type: darkMode ? 'dark' : 'light',\n    },\n  });\n\n  const useStyles = makeStyles({\n    root: {\n      background: theme.palette.background.default,\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      display: 'flex',\n      flexDirection: 'column'\n    }\n  });\n\n  const classes = useStyles();\n\n  const handleDarkModeChange = (dark: boolean) => {\n    setDarkMode(dark);\n    localStorage.setItem('darkMode', dark ? 'true' : 'false');\n  };\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div className={classes.root}>\n          <Navbar\n            darkMode={darkMode}\n            handleDarkModeChange={handleDarkModeChange}\n            handleDrawerToggle={handleDrawerToggle}\n            drawerWidth={drawerWidth}\n          />\n          <AppDrawerContainer drawerWidth={drawerWidth} mobileOpen={mobileOpen} handleDrawerToggle={handleDrawerToggle} />\n          <Contents drawerWidth={drawerWidth} />\n        </div>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nconst mapStateToProps = (state: any) => ({\n  darkMode: state.app.darkMode,\n  mobileOpen: state.app.mobileOpen\n});\n\nexport default connect(mapStateToProps, {\n  setDarkMode,\n  setMobileOpen\n})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport store from './redux/store';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}